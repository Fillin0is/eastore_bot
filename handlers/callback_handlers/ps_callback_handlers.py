from aiogram import F, Router, Bot
from aiogram.types import CallbackQuery, InputMediaPhoto, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup, default_state
from aiogram.filters import StateFilter, Command
from aiogram.types import Message


from lexicon.lexicon_ru import LEXICON_GAME_RU, LEXICON_RU
from services.services import get_rate_turkey, get_rate_ukraine
from keyboards.keyboards import inline_keyboard_regions_ps, inline_keyboard_functions_ps_turkey, inline_keyboard_main, inline_keyboard_calculate_ps_turkey, inline_keyboard_functions_ps_ukraine, inline_keyboard_calculate_ps_ukraine

router = Router(name=__name__)

error_emojis = ['üòï', 'üòû', 'üòü', 'üôÅ', 'üò¢', 'üò≠', 'üòì', 'üòî', 'üòñ', 'üò£']

class PriceTurkeyCalcPS(StatesGroup):
    amount = State()

class PriceUkraineCalcPS(StatesGroup):
    amount = State()

class PriceTurkeySentPS(StatesGroup):
    amount = State()

class PriceUkraineSentPS(StatesGroup):
    amount = State()

# ---------------------Playstation Store-------------------------

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ PlayStation Store
try:
    @router.callback_query(F.data == 'ps_pressed')
    async def show_ps_regions(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_region_photo.png'
                ),
                caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:',
            ),
            reply_markup=inline_keyboard_regions_ps
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ –¢—É—Ä—Ü–∏–∏ –Ω–∞ Playstation
try:
    @router.callback_query(F.data == 'turkey_ps_pressed')
    async def show_turkey_fanctions(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_turkey_flag.jpg'
                ), 
                caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
            ),
            reply_markup=inline_keyboard_functions_ps_turkey
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é —Ç–æ–ø–∞ –∏–≥—Ä –¢—É—Ä—Ü–∏–∏ –Ω–∞ Playstation
try:
    @router.callback_query(F.data == 'turkey_buy_pressed')
    async def show_game_top_turkey(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/fc25.jpg'
                ), 
                caption=LEXICON_GAME_RU['game_ps_turkey']
            ),
            reply_markup=inline_keyboard_calculate_ps_turkey
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ ps
try:
    @router.callback_query(F.data == 'exit_main_pressed')
    async def exit_to_main_menu(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/store.jpg'
                ),
                caption='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
            ),
            reply_markup=inline_keyboard_main
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ PlayStation Store
try:
    @router.callback_query(F.data == 'exit_region_ps_pressed')
    async def exit_to_region_menu(callback_query: CallbackQuery):
        await callback_query.answer()
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_region_photo.png'
                ),
                caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:',
            ),
            reply_markup=inline_keyboard_regions_ps
        )
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –í—ã—Ö–æ–¥ –∏–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —É–∫–∞–∑–∞—Ç—å –≤—ã—à–µ
try:
    @router.callback_query(F.data == 'turkey_ps_calculator_pressed')
    async def show_calculator_turkey_ps(callback_query: CallbackQuery, state: FSMContext):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/turkey_exchange_rate.jpg'
                ),
                caption='–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –ª–∏—Ä–∞—Ö (TL)',
            ),
            reply_markup=inline_keyboard_calculate_ps_turkey
        )
        await state.set_state(PriceTurkeyCalcPS.amount)
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()
    

# –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ PlayStation Store
try:
    @router.callback_query(F.data == 'exit_function_ps_turkey_pressed')
    async def exit_to_fanctions_ps_turkey(callback_query: CallbackQuery, state: FSMContext):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_turkey_flag.jpg'
                ), 
                caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
            ),
            reply_markup=inline_keyboard_functions_ps_turkey
        )
        await state.set_state(default_state)
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ –¢—É—Ä—Ü–∏–∏ PS store
try:
    @router.message(StateFilter(PriceTurkeyCalcPS.amount))
    async def ps_turkey_calculate(message: Message, bot: Bot, state: FSMContext):
        data = await state.get_data()
        
        if "message_id_calc" not in data.keys():
            message_id_calc = message.message_id - 1
            await state.update_data(message_id_calc=message_id_calc)
        else:
            message_id_calc = data["message_id_calc"]

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —ç–º–æ–¥–∑–∏ –∏–ª–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å 0
        emoji_index = data.get("emoji_index", 0)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º –∏ –±–æ–ª—å—à–µ –ª–∏ –æ–Ω –Ω—É–ª—è
        if message.text.isdigit() and int(message.text) > 0 and message.text[0] != '0':
            amount = float(message.text)
            try:
                await bot.edit_message_media(
                    chat_id=message.chat.id,
                    message_id=message_id_calc,
                    media=InputMediaPhoto(
                        media=FSInputFile(
                            path='photo/turkey_exchange_rate.jpg'
                        ),
                        caption=f'–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –∫ –æ–ø–ª–∞—Ç–µ = {get_rate_turkey(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –ª–∏—Ä–∞—Ö (TL)',
                    ),
                    reply_markup=inline_keyboard_calculate_ps_turkey
                )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            except Exception as e:
                await bot.edit_message_media(
                    chat_id=message.chat.id,
                    message_id=message_id_calc,
                    media=InputMediaPhoto(
                        media=FSInputFile(
                            path='photo/turkey_exchange_rate.jpg'
                        ),
                        caption=f'–°—É–º–º–∞ –∑–∞–∫–∞–∑a –∫ –æ–ø–ªa—Ç–µ = {get_rate_turkey(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –ª–∏—Ä–∞—Ö (TL)',
                    ),
                    reply_markup=inline_keyboard_calculate_ps_turkey
                )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        else:
            # –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
            current_emoji = error_emojis[emoji_index]
            emoji_index = (emoji_index + 1) % len(error_emojis)
            await state.update_data(emoji_index=emoji_index)

            # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤–≤–æ–¥–æ–º
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –∏ —ç–º–æ–¥–∑–∏
            await bot.edit_message_media(
                chat_id=message.chat.id,
                message_id=message_id_calc,
                media=InputMediaPhoto(
                    media=FSInputFile(
                        path='photo/turkey_exchange_rate.jpg'
                    ),
                    caption=f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ {current_emoji}\n\n–ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –ª–∏—Ä–∞—Ö (TL)',
                ),
                reply_markup=inline_keyboard_calculate_ps_turkey
            )
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# PS store, –ø–æ–¥–ø–∏—Å–∫–∏, —Ç—É—Ä—Ü–∏—è
try:
    @router.callback_query(F.data == 'turkey_ps_sub_pressed')
    async def show_ps_sub(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_sub_turkey.jpg'
                ), 
                caption='',
            ),
            reply_markup=inline_keyboard_calculate_ps_turkey
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¢—É—Ä–µ—Ü–∫–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ PS
try:
    @router.callback_query(F.data == 'turkey_sent_money_ps_pressed')
    async def show_sent_money_turkey_ps(callback_query: CallbackQuery, state: FSMContext):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/sent_money.jpg'
                ),
                caption='–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –ª–∏—Ä–∞—Ö (TL)',
            ),
            reply_markup=inline_keyboard_calculate_ps_turkey
        )
        await state.set_state(PriceTurkeySentPS.amount)
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¢—É—Ä—Ü–∏–∏ (Steam), —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
try:
    @router.message(StateFilter(PriceTurkeySentPS.amount))
    async def ps_turkey_sent_money(message: Message, bot: Bot, state: FSMContext):
        data = await state.get_data()
        
        if "message_id_calc" not in data.keys():
            message_id_calc = message.message_id - 1
            await state.update_data(message_id_calc=message_id_calc)
        else:
            message_id_calc = data["message_id_calc"]

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —ç–º–æ–¥–∑–∏ –∏–ª–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å 0
        emoji_index = data.get("emoji_index", 0)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º –∏ –±–æ–ª—å—à–µ –ª–∏ –æ–Ω –Ω—É–ª—è
        if message.text.isdigit() and int(message.text) > 0 and message.text[0] != '0':
            amount = float(message.text)
            try:
                await bot.edit_message_media(
                    chat_id=message.chat.id,
                    message_id=message_id_calc,
                    media=InputMediaPhoto(
                        media=FSInputFile(
                            path='photo/sent_money.jpg'
                        ),
                        caption=f'–°—É–º–º–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ = {get_rate_turkey(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –ª–∏—Ä–∞—Ö (TL)',
                    ),
                    reply_markup=inline_keyboard_calculate_ps_turkey
                )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            except Exception as e:
                await bot.edit_message_media(
                        chat_id=message.chat.id,
                        message_id=message_id_calc,
                        media=InputMediaPhoto(
                            media=FSInputFile(
                                path='photo/sent_money.jpg'
                            ),
                            caption=f'–°—É–º–º–∞ –Ωa –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ = {get_rate_turkey(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –ª–∏—Ä–∞—Ö (TL)',
                        ),
                        reply_markup=inline_keyboard_calculate_ps_turkey
                    )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        else:
            # –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
            current_emoji = error_emojis[emoji_index]
            emoji_index = (emoji_index + 1) % len(error_emojis)
            await state.update_data(emoji_index=emoji_index)

            # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤–≤–æ–¥–æ–º
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –∏ —ç–º–æ–¥–∑–∏
            await bot.edit_message_media(
                chat_id=message.chat.id,
                message_id=message_id_calc,
                media=InputMediaPhoto(
                    media=FSInputFile(
                        path='photo/sent_money.jpg'
                    ),
                    caption=f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ {current_emoji}\n\n–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –ª–∏—Ä–∞—Ö (TL)',
                ),
                reply_markup=inline_keyboard_calculate_ps_turkey
            )
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# -----------------–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ä–µ–≥–∏–æ–Ω PlayStation----------------------------

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ –£–∫—Ä–∞–∏–Ω—ã –Ω–∞ Playstation
try:
    @router.callback_query(F.data == 'ukraine_ps_pressed')
    async def show_ukraine_ps_fanctions(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_ukraine_flag.jpg'
                ), 
                caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
            ),
            reply_markup=inline_keyboard_functions_ps_ukraine
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ PlayStation
try:
    @router.callback_query(F.data.in_(['exit_function_ps_ukraine_pressed', 'exit_function_ps_ukraine_pressed']))
    async def exit_to_fanctions_ps_ukraine(callback_query: CallbackQuery, state: FSMContext):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_ukraine_flag.jpg'
                ), 
                caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
            ),
            reply_markup=inline_keyboard_functions_ps_ukraine
        )
        await state.set_state(default_state)
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¢—É—Ä—Ü–∏–∏ PS store
try:
    @router.callback_query(F.data == 'ukraine_ps_calculator_pressed')
    async def show_calculator_ukraine_ps(callback_query: CallbackQuery, state: FSMContext):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ukraine_exchange_rate.jpg'
                ),
                caption='–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
            ),
            reply_markup=inline_keyboard_calculate_ps_ukraine
        )
        await state.set_state(PriceUkraineCalcPS.amount)
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ò–∑–º–µ–Ω–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –£–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ PS store
try:
    @router.message(StateFilter(PriceUkraineCalcPS.amount))
    async def ps_ukraine_calculate(message: Message, bot: Bot, state: FSMContext):
        data = await state.get_data()
        
        if "message_id_calc" not in data.keys():
            message_id_calc = message.message_id - 1
            await state.update_data(message_id_calc=message_id_calc)
        else:
            message_id_calc = data["message_id_calc"]

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —ç–º–æ–¥–∑–∏ –∏–ª–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å 0
        emoji_index = data.get("emoji_index", 0)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º –∏ –±–æ–ª—å—à–µ –ª–∏ –æ–Ω –Ω—É–ª—è
        if message.text.isdigit() and int(message.text) > 0 and message.text[0] != '0':
            amount = float(message.text)
            try:
                await bot.edit_message_media(
                    chat_id=message.chat.id,
                    message_id=message_id_calc,
                    media=InputMediaPhoto(
                        media=FSInputFile(
                            path='photo/ukraine_exchange_rate.jpg'
                        ),
                        caption=f'–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –∫ –æ–ø–ª–∞—Ç–µ = {get_rate_ukraine(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
                    ),
                    reply_markup=inline_keyboard_calculate_ps_ukraine
                )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            except Exception as e:
                await bot.edit_message_media(
                    chat_id=message.chat.id,
                    message_id=message_id_calc,
                    media=InputMediaPhoto(
                        media=FSInputFile(
                            path='photo/ukraine_exchange_rate.jpg'
                        ),
                        caption=f'–°—É–º–º–∞ –∑–∞–∫–∞–∑a –∫ –æ–ø–ªa—Ç–µ = {get_rate_ukraine(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
                    ),
                    reply_markup=inline_keyboard_calculate_ps_ukraine
                )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        else:
            # –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
            current_emoji = error_emojis[emoji_index]
            emoji_index = (emoji_index + 1) % len(error_emojis)
            await state.update_data(emoji_index=emoji_index)

            # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤–≤–æ–¥–æ–º
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –∏ —ç–º–æ–¥–∑–∏
            await bot.edit_message_media(
                chat_id=message.chat.id,
                message_id=message_id_calc,
                media=InputMediaPhoto(
                    media=FSInputFile(
                        path='photo/ukraine_exchange_rate.jpg'
                    ),
                    caption=f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ {current_emoji}\n\n–ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
                ),
                reply_markup=inline_keyboard_calculate_ps_ukraine
            )
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é —Ç–æ–ø–∞ –∏–≥—Ä –£–∫—Ä–∞–∏–Ω—ã –Ω–∞ Playstation
try:
    @router.callback_query(F.data == 'ukraine_buy_ps_pressed')
    async def show_game_top_ukraine(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/fc25.jpg'
                ), 
                caption=LEXICON_GAME_RU['game_ps_ukraine']
            ),
            reply_markup=inline_keyboard_calculate_ps_ukraine
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ü–æ–¥–ø–∏—Å–∫–∏ –∏–≥—Ä –£–∫—Ä–∞–∏–Ω—ã –Ω–∞ Playstation
try:
    @router.callback_query(F.data == 'ukraine_ps_sub_pressed')
    async def show_sub_ukraine(callback_query: CallbackQuery):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/ps_sub_ukraine.jpg'
                ), 
                caption=''
            ),
            reply_markup=inline_keyboard_calculate_ps_ukraine
        )
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –£–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ PS
try:
    @router.callback_query(F.data == 'ukraine_ps_sent_money_pressed')
    async def show_sent_money_ukraine_ps(callback_query: CallbackQuery, state: FSMContext):
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=FSInputFile(
                    path='photo/sent_money.jpg'
                ),
                caption='–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
            ),
            reply_markup=inline_keyboard_calculate_ps_ukraine
        )
        await state.set_state(PriceUkraineSentPS.amount)
        await callback_query.answer()
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()


# –ú–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –£–∫—Ä–∞–∏–Ω—ã (PS), —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
try:
    @router.message(StateFilter(PriceUkraineSentPS.amount))
    async def ps_ukraine_sent_money(message: Message, bot: Bot, state: FSMContext):
        data = await state.get_data()
        
        if "message_id_calc" not in data.keys():
            message_id_calc = message.message_id - 1
            await state.update_data(message_id_calc=message_id_calc)
        else:
            message_id_calc = data["message_id_calc"]

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —ç–º–æ–¥–∑–∏ –∏–ª–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å 0
        emoji_index = data.get("emoji_index", 0)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º –∏ –±–æ–ª—å—à–µ –ª–∏ –æ–Ω –Ω—É–ª—è
        if message.text.isdigit() and int(message.text) > 0 and message.text[0] != '0':
            amount = float(message.text)
            try:
                await bot.edit_message_media(
                    chat_id=message.chat.id,
                    message_id=message_id_calc,
                    media=InputMediaPhoto(
                        media=FSInputFile(
                            path='photo/sent_money.jpg'
                        ),
                        caption=f'–°—É–º–º–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ = {get_rate_ukraine(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
                    ),
                    reply_markup=inline_keyboard_calculate_ps_ukraine
                )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            except Exception as e:
                await bot.edit_message_media(
                        chat_id=message.chat.id,
                        message_id=message_id_calc,
                        media=InputMediaPhoto(
                            media=FSInputFile(
                                path='photo/sent_money.jpg'
                            ),
                            caption=f'–°—É–º–º–∞ –Ωa –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ = {get_rate_ukraine(amount)} (‚ÇΩ)\n\n–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
                        ),
                        reply_markup=inline_keyboard_calculate_ps_ukraine
                    )
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        else:
            # –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
            current_emoji = error_emojis[emoji_index]
            emoji_index = (emoji_index + 1) % len(error_emojis)
            await state.update_data(emoji_index=emoji_index)

            # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤–≤–æ–¥–æ–º
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –∏ —ç–º–æ–¥–∑–∏
            await bot.edit_message_media(
                chat_id=message.chat.id,
                message_id=message_id_calc,
                media=InputMediaPhoto(
                    media=FSInputFile(
                        path='photo/sent_money.jpg'
                    ),
                    caption=f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ {current_emoji}\n\n–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –≥—Ä–∏–≤–Ω–∞—Ö (UAH)',
                ),
                reply_markup=inline_keyboard_calculate_ps_ukraine
            )
except Exception as e:
    @router.message(Command(commands='start'))
    async def process_start_command(message: Message, state: FSMContext):
        file_path = 'photo/store.jpg'
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=FSInputFile(
                path=file_path
            ),
            caption=LEXICON_RU['/start'],
            reply_markup=inline_keyboard_main
        )
        await state.clear()